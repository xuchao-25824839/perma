# -*- coding: utf-8 -*-
# Generated by Django 1.11.13 on 2018-06-25 22:58
from __future__ import unicode_literals

from decimal import Decimal
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('perma', '0033_auto_20180626_1639'),
    ]

    operations = [
        migrations.AlterField(
            model_name='apikey',
            name='key',
            field=models.CharField(blank=True, db_index=True, default='', max_length=128),
        ),
        migrations.AlterField(
            model_name='capture',
            name='content_type',
            field=models.CharField(default='', help_text='HTTP Content-type header.', max_length=255),
        ),
        migrations.AlterField(
            model_name='capture',
            name='record_type',
            field=models.CharField(choices=[('response', 'WARC Response record -- recorded from web'), ('resource', 'WARC Resource record -- file without web headers')], max_length=10),
        ),
        migrations.AlterField(
            model_name='capture',
            name='role',
            field=models.CharField(choices=[('primary', 'primary'), ('screenshot', 'screenshot'), ('favicon', 'favicon')], max_length=10),
        ),
        migrations.AlterField(
            model_name='capture',
            name='status',
            field=models.CharField(choices=[('pending', 'pending'), ('failed', 'failed'), ('success', 'success')], max_length=10),
        ),
        migrations.AlterField(
            model_name='capture',
            name='user_upload',
            field=models.BooleanField(default=False, help_text='True if the user uploaded this capture.'),
        ),
        migrations.AlterField(
            model_name='capturejob',
            name='status',
            field=models.CharField(choices=[('pending', 'pending'), ('in_progress', 'in_progress'), ('completed', 'completed'), ('deleted', 'deleted'), ('failed', 'failed'), ('invalid', 'invalid')], db_index=True, default='invalid', max_length=15),
        ),
        migrations.AlterField(
            model_name='historicallink',
            name='archive_timestamp',
            field=models.DateTimeField(blank=True, help_text='Date after which this link is eligible to be copied by the mirror network.', null=True),
        ),
        migrations.AlterField(
            model_name='historicallink',
            name='internet_archive_upload_status',
            field=models.CharField(choices=[('not_started', 'not_started'), ('completed', 'completed'), ('failed', 'failed'), ('failed_permanently', 'failed_permanently'), ('deleted', 'deleted')], default='not_started', max_length=20),
        ),
        migrations.AlterField(
            model_name='historicallink',
            name='private_reason',
            field=models.CharField(blank=True, choices=[('policy', 'Robots.txt or meta tag'), ('user', 'At user direction'), ('takedown', 'At request of content owner'), ('failure', 'Analysis of meta tags failed')], max_length=10, null=True),
        ),
        migrations.AlterField(
            model_name='historicallink',
            name='thumbnail_status',
            field=models.CharField(blank=True, choices=[('generating', 'generating'), ('generated', 'generated'), ('failed', 'failed')], max_length=10, null=True),
        ),
        migrations.AlterField(
            model_name='historicallink',
            name='user_deleted',
            field=models.BooleanField(default=False, verbose_name='Deleted by user'),
        ),
        migrations.AlterField(
            model_name='historicallinkuser',
            name='email',
            field=models.EmailField(db_index=True, error_messages={'unique': 'A user with that email address already exists.'}, max_length=255, verbose_name='email address'),
        ),
        migrations.AlterField(
            model_name='historicalorganization',
            name='user_deleted',
            field=models.BooleanField(default=False, verbose_name='Deleted by user'),
        ),
        migrations.AlterField(
            model_name='historicalregistrar',
            name='cached_subscription_status',
            field=models.CharField(blank=True, help_text="The last known status of registrar's paid subscription, from Perma Payments", max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='historicalregistrar',
            name='monthly_rate',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Base rate for calculating subscription cost.', max_digits=19),
        ),
        migrations.AlterField(
            model_name='historicalregistrar',
            name='nonpaying',
            field=models.BooleanField(default=True, help_text='Whether this registrar qualifies for a free account.'),
        ),
        migrations.AlterField(
            model_name='historicalregistrar',
            name='partner_display_name',
            field=models.CharField(blank=True, help_text="Optional. Use this to override 'name' for the partner list.", max_length=400, null=True),
        ),
        migrations.AlterField(
            model_name='historicalregistrar',
            name='show_partner_status',
            field=models.BooleanField(default=False, help_text='Whether to show this registrar in our list of partners.'),
        ),
        migrations.AlterField(
            model_name='historicalregistrar',
            name='status',
            field=models.CharField(choices=[('pending', 'pending'), ('approved', 'approved'), ('denied', 'denied')], default='pending', max_length=20),
        ),
        migrations.AlterField(
            model_name='link',
            name='archive_timestamp',
            field=models.DateTimeField(blank=True, help_text='Date after which this link is eligible to be copied by the mirror network.', null=True),
        ),
        migrations.AlterField(
            model_name='link',
            name='internet_archive_upload_status',
            field=models.CharField(choices=[('not_started', 'not_started'), ('completed', 'completed'), ('failed', 'failed'), ('failed_permanently', 'failed_permanently'), ('deleted', 'deleted')], default='not_started', max_length=20),
        ),
        migrations.AlterField(
            model_name='link',
            name='private_reason',
            field=models.CharField(blank=True, choices=[('policy', 'Robots.txt or meta tag'), ('user', 'At user direction'), ('takedown', 'At request of content owner'), ('failure', 'Analysis of meta tags failed')], max_length=10, null=True),
        ),
        migrations.AlterField(
            model_name='link',
            name='replacement_link',
            field=models.ForeignKey(blank=True, help_text='New link to which readers should be forwarded when trying to view this link.', null=True, on_delete=django.db.models.deletion.CASCADE, to='perma.Link'),
        ),
        migrations.AlterField(
            model_name='link',
            name='thumbnail_status',
            field=models.CharField(blank=True, choices=[('generating', 'generating'), ('generated', 'generated'), ('failed', 'failed')], max_length=10, null=True),
        ),
        migrations.AlterField(
            model_name='link',
            name='user_deleted',
            field=models.BooleanField(default=False, verbose_name='Deleted by user'),
        ),
        migrations.AlterField(
            model_name='linkuser',
            name='email',
            field=models.EmailField(db_index=True, error_messages={'unique': 'A user with that email address already exists.'}, max_length=255, unique=True, verbose_name='email address'),
        ),
        migrations.AlterField(
            model_name='linkuser',
            name='organizations',
            field=models.ManyToManyField(blank=True, help_text='If set, this user is an org user. This should not be set if registrar is set!<br><br>Note: <b>This list will include deleted orgs of which this user is a member.</b> This is a historical record and deleted org memberships cannot be removed.<br><br>', related_name='users', to='perma.Organization'),
        ),
        migrations.AlterField(
            model_name='linkuser',
            name='registrar',
            field=models.ForeignKey(blank=True, help_text='If set, this user is a registrar user. This should not be set if org is set!', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='users', to='perma.Registrar'),
        ),
        migrations.AlterField(
            model_name='organization',
            name='user_deleted',
            field=models.BooleanField(default=False, verbose_name='Deleted by user'),
        ),
        migrations.AlterField(
            model_name='registrar',
            name='cached_subscription_status',
            field=models.CharField(blank=True, help_text="The last known status of registrar's paid subscription, from Perma Payments", max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='registrar',
            name='logo',
            field=models.ImageField(blank=True, null=True, upload_to='registrar_logos'),
        ),
        migrations.AlterField(
            model_name='registrar',
            name='monthly_rate',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Base rate for calculating subscription cost.', max_digits=19),
        ),
        migrations.AlterField(
            model_name='registrar',
            name='nonpaying',
            field=models.BooleanField(default=True, help_text='Whether this registrar qualifies for a free account.'),
        ),
        migrations.AlterField(
            model_name='registrar',
            name='partner_display_name',
            field=models.CharField(blank=True, help_text="Optional. Use this to override 'name' for the partner list.", max_length=400, null=True),
        ),
        migrations.AlterField(
            model_name='registrar',
            name='show_partner_status',
            field=models.BooleanField(default=False, help_text='Whether to show this registrar in our list of partners.'),
        ),
        migrations.AlterField(
            model_name='registrar',
            name='status',
            field=models.CharField(choices=[('pending', 'pending'), ('approved', 'approved'), ('denied', 'denied')], default='pending', max_length=20),
        ),
    ]
